#!/usr/bin/env python3.3
# -*- coding: utf8 -*-
#
# Uses the python implementation for nmap to scan a system

# Copyright (c) 2015	NorthernSec
# Copyright (c)	2015	Pieter-Jan Moreels
# This software is licensed under the Original BSD License

# Imports
import os
import sys
runpath=os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runpath, '..'))

from libnmap.parser import NmapParser
from libnmap.process import NmapProcess

import argparse
import json

from lib.Config import Configuration
from lib.WebDisplay import WebDisplay
from lib.TermDisplay import TermDisplay

description='''Uses the python implementation for nmap to scan a
               system'''

parser = argparse.ArgumentParser(description=description)
parser.add_argument('-o',  metavar='options', type=str, help='Extra scan options, next to (-O -A)' )
parser.add_argument('-t',  metavar='target',  type=str, help='Target to be scanned' )
parser.add_argument('out', metavar='output',  type=str, help='Output file of the scan')
parser.add_argument('-s',  action='store_true',         help='Silent mode (no output)' )
args = parser.parse_args()

def scan(targets, extraOptions="", silent=False):
  nm=NmapProcess(targets=targets, options="-O -A "+extraOptions)
  if not silent: print("NMap scan started")
  nm.run()
  if not silent: print(nm.summary)
  return nm.stdout

if __name__ == '__main__':
  eo=args.o if args.o else ""
  data = scan(args.t, eo, args.s)
  #output
  print(data)
